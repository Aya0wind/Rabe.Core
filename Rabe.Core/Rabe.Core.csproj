<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <PackageId>Rabe.Core</PackageId>
    <Version>1.1.1</Version>
    <Authors>abc66789</Authors>
    <PackageReleaseNotes>full surpport for all algorithms in rabe library</PackageReleaseNotes>
    <PackageTags>Attribute Based Encryption;Encryption;Crypto;ABE;CP-ABE;KP-ABE</PackageTags>
    <Description>
      This library is rust attribute based encryption library rabe's c# binding, support mutiple
      CP-ABE and KP-ABE algorithm.
      Support cipher or key json serialization and deserialization.
    </Description>
    <PackageProjectUrl>https://github.com/Aya0wind/Rabe.Core</PackageProjectUrl>
    <RepositoryUrl>https://github.com/Aya0wind/Rabe.Core</RepositoryUrl>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>
  <ItemGroup Condition="$([MSBuild]::IsOSPlatform('Windows'))">
    <!--  debug only，copy native library to output path      -->
    <None Include="libs\runtimes\win-x64\native\*.*">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Link>%(FileName)%(Extension)</Link>
      <Visible>false</Visible>
    </None>
  </ItemGroup>
  <ItemGroup Condition="$([MSBuild]::IsOSPlatform('Linux'))">
    <!--  debug only，copy native library to output path      -->
    <None Include="libs\runtimes\linux-x64\native\*.*">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Link>%(FileName)%(Extension)</Link>
      <Visible>false</Visible>
    </None>
  </ItemGroup>
  <ItemGroup Condition=" $([MSBuild]::IsOsPlatform('OSX'))">
    <!--  debug only，copy native library to output path      -->
    <None
      Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)' == 'X64'"
      Include="libs\runtimes\osx-x64\native\*.*">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Link>%(FileName)%(Extension)</Link>
      <Visible>false</Visible>
    </None>
    <None
      Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)' == 'Arm64'"
      Include="libs\runtimes\osx-arm64\native\*.*">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Link>%(FileName)%(Extension)</Link>
      <Visible>false</Visible>
    </None>
  </ItemGroup>
  <!--  publish only，copy native libraries to runtime folder  -->
  <Target Name="IncludeAllDependencies" BeforeTargets="_GetPackageFiles">
    <ItemGroup>
      <None Include="libs\runtimes\**\*.*" Pack="True" PackagePath="runtimes" />
    </ItemGroup>
  </Target>
  <!-- help compile choose different library in different platform      -->
  <PropertyGroup Condition="$([MSBuild]::IsOSPlatform('Windows'))">
    <DefineConstants>OS_WINDOWS</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="$([MSBuild]::IsOSPlatform('Linux'))">
    <DefineConstants>OS_LINUX</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="$([MSBuild]::IsOSPlatform('OSX'))">
    <DefineConstants>OS_MACOS</DefineConstants>
  </PropertyGroup>
</Project>
